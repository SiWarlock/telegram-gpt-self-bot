// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id
  username    String?
  roles       Role[]   @relation("UserRoles")
  permissions Permission[] @relation("UserPermissions")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Other user-related features
  reminders   Reminder[]
  notes       Note[]
  settings    Setting[]
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  permissions Permission[] @relation("RolePermissions")
  users       User[]   @relation("UserRoles")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Permission {
  id          String   @id @default(cuid())
  name        String   @unique
  roles       Role[]   @relation("RolePermissions")
  users       User[]   @relation("UserPermissions")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Setting {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  key         String
  value       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, key])
}

model Note {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  title       String
  content     String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Reminder {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  content     String
  dueDate     DateTime
  completed   Boolean  @default(false)
  recurring   Boolean  @default(false)
  recurringPattern String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Log {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now())
  action    String
  details   String

  @@map("logs")
} 